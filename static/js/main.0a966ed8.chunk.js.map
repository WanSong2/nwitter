{"version":3,"sources":["fbase.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/AuthForm.js","routes/Auth.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","dbService","storageService","Nweet","nweetObj","isOwner","useState","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","event","a","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","prev","onSubmit","preventDefault","update","type","placeholder","value","onChange","target","required","onClick","src","width","height","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","console","log","readAsDataURL","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","data","key","AuthForm","newAccount","setNewAccount","error","setError","email","setEmail","password","setPassword","name","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","Auth","onSocialClick","provider","auth","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","Navigation","to","displayName","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","getMyNweets","where","orderBy","get","updateProfile","signOut","push","AppRouter","isLoggedIn","exact","path","Profile","App","init","setInit","setIsLoggedIn","setUserObj","onAuthStateChanged","user","args","currentUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0a966ed8.chunk.js","sourcesContent":["import * as firebase from 'firebase';\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n    appId: process.env.REACT_APP_APP_ID\n  };\n\n  firebase.initializeApp(firebaseConfig);\n\n  export const firebaseInstance = firebase;\n  export const authService = firebase.auth();\n  export const dbService = firebase.firestore();\n  export const storageService = firebase.storage();","import { dbService, storageService } from 'fbase';\nimport React, { useState } from 'react';\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n    const [editing, setEditing] = useState(false);\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\n    \n    const onDeleteClick = async (event) => {\n        const ok = window.confirm(\"Are you sure you want to delete this nweet?\") ;\n        if(ok) {\n           await dbService.doc(`nweets/${nweetObj.id}`).delete();\n           await storageService.refFromURL(nweetObj.attachmentUrl).delete();\n        }\n    }\n\n    const toggleEditing = () => setEditing((prev) => !prev);\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        await dbService.doc(`nweets/${nweetObj.id}`).update({\n            text:newNweet\n        })\n        setEditing(false);\n    }\n\n    const onChange = (event) => {\n        const {\n            target:{value},\n        } = event;\n        \n        setNewNweet(value);\n    }\n\n    return (\n        <div>\n            {editing ? (\n                <>\n                {isOwner &&\n                <>\n                    <form onSubmit={onSubmit}>\n                        <input \n                            type=\"text\" \n                            placeholder=\"Edit your nweet\" \n                            value={newNweet}\n                            onChange={onChange} \n                            required \n                        />\n                        <input type=\"submit\" value=\"Update Nweet\" />\n                    </form>\n                    <button onClick={toggleEditing}>Cancel</button>\n                </>\n                }\n                </>\n            ) : (\n                <>\n                    <h4>{nweetObj.text}</h4>\n                    {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} width=\"50px\" height=\"50px\" />}\n                    {isOwner && (\n                        <>\n                        <button onClick={onDeleteClick}>Delete Nweet</button>\n                        <button onClick={toggleEditing}>Edit Nweet</button>\n                        </>\n                    )}\n                </>\n            )}\n        </div>\n    )\n}\n        \nexport default Nweet;","import React, { useEffect, useState } from \"react\";\nimport { storageService, dbService } from 'fbase';\nimport { v4 as uuidv4 } from 'uuid';  \n\nconst NweetFactory = ({ userObj }) => {\n\n    const [nweet, setNweet] = useState(\"\");\n    const [attachment, setAttachment] = useState(\"\");\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n\n        let attachmentUrl =\"\";\n        if (attachment !== \"\") {\n            const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\n\n            const response = await attachmentRef.putString(attachment, \"data_url\");\n\n            attachmentUrl = await response.ref.getDownloadURL();\n        }\n\n        const nweetObj = {\n            text: nweet,\n            createdAt: Date.now(),\n            creatorId: userObj.uid,\n            attachmentUrl,\n        }\n        \n        await dbService.collection(\"nweets\").add(nweetObj);\n        setNweet(\"\");\n        setAttachment(\"\");\n    }\n\n    const onChange = (event) => {\n        const { target: {value}} = event;\n        setNweet(value);\n    }\n\n    const onFileChange = (event) => {\n        const { target : {files} } = event;\n        const theFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => {\n            const {\n                currentTarget: { result }, \n            } = finishedEvent;\n\n            console.log(result);\n            setAttachment(result);\n        };\n        reader.readAsDataURL(theFile);\n    }\n\n    const onClearAttachement = () => {\n        setAttachment(null);\n    }\n\n    return (\n\n        <form onSubmit={onSubmit}>\n            <input type=\"text\" \n                value={nweet} \n                onChange={onChange} \n                placeholder=\"What's on your mind?\" \n                maxLength={120} \n            />\n            <input \n                type='file' \n                accept=\"image/*\" \n                onChange={onFileChange}\n            />\n            <input \n                type=\"submit\" \n                value=\"Nweet\" \n            />\n\n            {attachment && \n                <div>\n                    <img src={attachment} width=\"50px\" height=\"50px\" />\n                    <button onClick={onClearAttachement}>Clear</button>\n                </div> \n            }\n        </form>\n        \n    )\n\n}\n\nexport default NweetFactory;","import { dbService } from \"fbase\";\nimport React, { useEffect, useState } from \"react\";\nimport Nweet from 'components/Nweet';\nimport NweetFactory from \"components/NweetFactory\";\n\nconst Home = ( {userObj} ) => {\n\n\n    const [nweets, setNweets] = useState([]);\n\n\n/*  구식!! \n    const getNweets = async () => {\n        const dbNweets = await dbService.collection(\"nweets\").get();\n        dbNweets.forEach((document) => {\n            const nweetObject = {\n                ...document.data(),\n                id: document.id,\n            }\n            setNweets((prev) => [nweetObject, ...prev]);\n        })\n    }\n*/\n\n    useEffect(() => {\n        dbService.collection(\"nweets\").onSnapshot((snapshot) => {\n            const nweetArray = snapshot.docs.map(doc => ({\n                id:doc.id,\n                ...doc.data(),\n            }));\n\n            setNweets(nweetArray);\n        });\n    }, [])\n\n    return (\n        <div>\n            \n            <NweetFactory userObj={userObj} />\n\n            <div>\n                {nweets.map(nweet => \n                   <Nweet \n                    key={nweet.id} \n                    nweetObj={nweet}\n                    isOwner={nweet.creatorId === userObj.uid}\n                   />\n                )}\n            </div>    \n        </div> \n    )\n}\n\nexport default Home;\n\n","import React, { useState } from \"react\";\nimport { authService } from \"fbase\";\n\nconst AuthForm = () => {\n\n    const [newAccount, setNewAccount] = useState(true);\n    const [error, setError] = useState(\"\");\n    const toggleAccount = () => {\n        setNewAccount(prev => !prev);\n    }\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n\n    const onChange = (event) => {\n        const {target: {name, value}} = event;\n        if (name === \"email\") {\n            setEmail(value);\n        } else if (name === \"password\") {\n            setPassword(value);\n        }\n\n    }\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        try {\n            \n            let data;\n            if(newAccount) {\n                data = await authService.createUserWithEmailAndPassword(\n                    email, \n                    password\n                )\n            } else {\n                data = await authService.signInWithEmailAndPassword(\n                    email, \n                    password\n                )\n            }\n\n        } catch(error) {\n            setError(error.message);\n            console.log(error.message)\n        }\n    } \n\n    return (\n\n        <>\n        <form onSubmit={onSubmit}>\n            <input \n                name=\"email\" \n                type=\"text\" \n                placeholder=\"Email\" \n                required  \n                value={email}\n                onChange={onChange}\n            />\n            <input \n                name=\"password\" \n                type=\"password\" \n                placeholder=\"Password\" \n                required \n                value={password} \n                onChange={onChange}\n            />\n            <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Sign In\"} />\n\n            {error}\n\n        </form>\n        <span onClick={toggleAccount}>{newAccount ? \"Sign In\" : \"Create Account\"}</span>\n        </>\n\n    )\n\n}\nexport default AuthForm;","import React, { useState } from \"react\";\nimport { authService , firebaseInstance } from \"fbase\";\nimport AuthForm from \"components/AuthForm\";\n\nconst Auth = () => {\n\n    const onSocialClick = async (event) => {\n        try {\n            const {target:{name}} = event;\n\n            let provider;\n            if(name === \"google\") {\n                provider = new firebaseInstance.auth.GoogleAuthProvider();\n            } else if(name === \"github\") {\n                provider = new firebaseInstance.auth.GithubAuthProvider();\n            }\n\n            const data = await authService.signInWithPopup(provider);\n            console.log(data);\n        } catch(error) {\n            console.log(error.message)\n        }\n    }\n\n    return (\n        <div>\n            \n            <AuthForm />\n\n            <div>\n                <button onClick={onSocialClick} name=\"google\">Continue with Google</button>\n                <button onClick={onSocialClick} name=\"github\">Continue with Github</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Auth;","import React from 'react';\nimport {Link} from 'react-router-dom'\n\nconst Navigation = ({ userObj }) => (\n\n    <nav>\n        <ul>\n            <li>\n                <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n                <Link to=\"/profile\">{userObj.displayName}의 Profile</Link>\n            </li>\n        </ul>\n    </nav>\n\n)\n\nexport default Navigation;","import React, { useEffect, useState } from \"react\";\nimport { authService, dbService } from 'fbase';\nimport { useHistory } from \"react-router-dom\";\n\nexport default ({ refreshUser, userObj }) => {\n\n    const history = useHistory();\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n    const onLogOutClick = () => {\n        authService.signOut();\n        history.push(\"/\");\n    };\n\n    const getMyNweets = async () => {\n        const nweets = await dbService\n        .collection(\"nweets\")\n        .where(\"creatorId\", \"==\", userObj.uid)\n        .orderBy(\"createdAt\")\n        .get();\n        console.log(nweets.docs.map((doc) => doc.data()));\n    }\n\n    useEffect(() => {\n        getMyNweets();\n    }, []);\n\n    const onChange = (event) => {\n        const { target: {value} } = event\n        setNewDisplayName(value);\n    }\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        if(userObj.displayName !== newDisplayName) {\n            const response = await userObj.updateProfile({\n                displayName: newDisplayName,\n            });\n\n            refreshUser();\n        }\n    }\n    \n    return (\n        <>\n            <form onSubmit={onSubmit}>\n                <input \n                    type=\"text\" \n                    placeholder=\"Display name\"\n                    onChange={onChange}\n                    value={newDisplayName}\n                />\n                <input type=\"submit\" value=\"Update profile\" />\n            </form>\n            <button onClick={onLogOutClick}>Log Out</button>\n        </>\n    )\n\n}","import React from 'react';\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom';\nimport Home from 'routes/Home';\nimport Auth from 'routes/Auth';\nimport Navigation from 'components/Navigation';\nimport Profile from 'routes/Profile';\n\n\nconst AppRouter = ( { refreshUser, isLoggedIn, userObj} ) => {\n\n    return (\n        <Router>\n            {isLoggedIn && <Navigation userObj={userObj} /> }\n            <Switch>\n                {isLoggedIn ? (\n                    <>\n                        <Route exact path=\"/\">\n                            <Home userObj={userObj} />\n                        </Route>\n                        <Route exact path=\"/profile\">\n                            <Profile userObj={userObj} refreshUser={refreshUser} />\n                        </Route>                       \n                    </>\n                    ) : ( \n                        <Route exact path=\"/\">\n                            <Auth />\n                        </Route>\n                    )}\n            </Switch>\n        </Router>\n    )\n}\n\nexport default AppRouter;","import React, {useEffect, useState} from 'react';\nimport AppRouter from 'components/Router';\nimport { authService } from \"fbase\";\n\nfunction App() {\n\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  // 이게 중요한 부분!!\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if(user) {\n        setIsLoggedIn(true);\n        setUserObj({\n          displayName : user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setIsLoggedIn(false);\n        setUserObj(null);\n      }\n      setInit(true);\n      refreshUser();\n    });\n  }, [])\n\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName : user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  }\n\n\n  return (\n    <>\n      {init ? <AppRouter \n                refreshUser={refreshUser} \n                isLoggedIn={isLoggedIn} \n                userObj={userObj} \n      /> : \"초기화중...\"}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport fbase from 'fbase';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}